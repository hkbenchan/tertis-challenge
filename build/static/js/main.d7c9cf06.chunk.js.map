{"version":3,"sources":["logo.svg","redux/middlewares/store.js","constants/game.js","constants/block.js","utils/block.js","redux/modules/game.js","redux/index.js","components/row.js","containers/board.js","containers/gameHandler.js","containers/gameMessage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","composeEnhancers","composeWithDevTools","middleware","storeGenerator","reducer","createStore","applyMiddleware","DEFAULT_GRAVITY","BLOCK_TYPE","LONG","SQUARE","LSHAPE_1","LSHAPE_2","TSHAPE","BLOCK_DIRECTION","computeBlockPosition","currentBlock","type","direction","position","longBlockPositions","squareBlockPositions","lShape1BlockPositions","lShape2BlockPositions","tShapeBlockPositions","validateBoard","board","block","positions","R","pos","width","height","ADVANCED_BOARD","MOVE_BLOCK_LEFT","MOVE_BLOCK_RIGHT","ROTATE_BLOCK","MOVE_BLOCK_DOWN","defaultBlockComposition","generateNewBlock","blockTypeKeys","key","Math","floor","random","length","generateNewBlockType","GRID_WIDTH","initialState","Array","fill","currentDroppingBlock","isPlaying","gamePoint","advancedBoardReducer","state","action","console","log","currentPosition","newPosition","updatedBlock","newBlock","isOutOfBound","newBoard","row","rowIndex","cell","cellIndex","anyUnpaintPart","taintBoardPositionAsSolid","tempBoard","pointReceived","x","clearCompletedBoardLines","moveBlockRedcuer","rotateBlockReducer","nextDirection","isPlayingSelector","game","combineReducers","Cell","styled","div","props","isDropping","Container","Row","rowState","blockXPositions","cellState","index","Grid","Board","this","computedXPositions","React","PureComponent","mapStateToProps","connect","Handler","onKeydown","event","moveBlockLeft","moveBlockRight","rotateBlock","moveBlockDown","keyCode","update","advanceBoard","setTimeout","document","addEventListener","removeListener","mapDispatchToProps","Controls","Header","Score","isOver","score","App","className","href","Boolean","window","location","hostname","match","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7c9cf06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\n\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\nconst middleware = []\n\nconst storeGenerator = reducer => createStore(reducer, /* preloadedState, */ composeEnhancers(\n  applyMiddleware(...middleware),\n  // other store enhancers if any\n));\n\nexport default storeGenerator\n","// list all the defined values here\n\nexport const GRID_WIDTH = 10\nexport const GRID_HEIGHT = 15\n\nexport const GAME_FPS = 30\nexport const DEFAULT_GRAVITY = 1 // translate into drop n height within a second\nexport const ACCLERATED_GRAVITY = 10\n","export const EMPTY_BLOCK = 0\nexport const SOLID_BLOCK = 1\nexport const DROPPING_BLOCK = 2\n\nexport const BLOCK_TYPE = {\n  LONG: 'long', // 1 x 4,\n  // position is xCxx or\n  // x\n  // C\n  // x\n  // x\n  SQUARE: 'square', // 2 x 2\n  // position is\n  // Cx\n  // xx\n  LSHAPE_1: 'l-shape-1', // 2 x 3 (L)\n  // position is\n  // x         x\n  // x   or  xxC\n  // Cx\n  LSHAPE_2: 'l-shape-2', // 2 x 3 (L)\n  // position is\n  //  x      x\n  //  x  or  Cxx\n  // xC\n  TSHAPE: 't-shape', // 2 x 3 (T)\n  // position is\n  //  x        x\n  //  Cx  or  xCx\n  //  x\n}\n\nexport const BLOCK_DIRECTION = {\n  N: 'N',\n  E: 'E',\n  S: 'S',\n  W: 'W',\n}\n","import * as R from 'ramda'\nimport { SOLID_BLOCK, EMPTY_BLOCK, BLOCK_TYPE, BLOCK_DIRECTION } from '../constants/block'\nimport { GRID_WIDTH, GRID_HEIGHT} from '../constants/game'\n\nconst longBlockPositions = currentBlock => {\n  const { direction, position } = currentBlock\n  switch (direction) {\n    // 1w 4h\n    case BLOCK_DIRECTION.N:\n    case BLOCK_DIRECTION.S:\n      return [\n        [position[0], position[1] - 1],\n        [position[0], position[1]],\n        [position[0], position[1] + 1],\n        [position[0], position[1] + 2],\n      ]\n    default:\n      return [\n        [position[0] - 1, position[1]],\n        [position[0], position[1]],\n        [position[0] + 1, position[1]],\n        [position[0] + 2, position[1]],\n      ]\n  }\n}\n\nconst squareBlockPositions = currentBlock => {\n  const { position } = currentBlock\n  return [\n    [position[0], position[1]],\n    [position[0], position[1] + 1],\n    [position[0]+1, position[1]],\n    [position[0]+1, position[1] + 1],\n  ]\n}\n\nconst lShape1BlockPositions = currentBlock => {\n  const { direction, position } = currentBlock\n  switch (direction) {\n    case BLOCK_DIRECTION.N:\n      return [\n        [position[0] - 1, position[1]],\n        [position[0], position[1]],\n        [position[0], position[1] + 1],\n        [position[0], position[1] + 2],\n      ]\n    case BLOCK_DIRECTION.E:\n      return [\n        [position[0], position[1] - 1],\n        [position[0], position[1]],\n        [position[0] - 1, position[1]],\n        [position[0] - 2, position[1]],\n      ]\n    case BLOCK_DIRECTION.S:\n      return [\n        [position[0] +  1, position[1]],\n        [position[0], position[1]],\n        [position[0], position[1] - 1],\n        [position[0], position[1] - 2],\n      ]\n    case BLOCK_DIRECTION.W:\n      return [\n        [position[0], position[1] + 1],\n        [position[0], position[1]],\n        [position[0] + 1, position[1]],\n        [position[0] + 2, position[1]],\n      ]\n  }\n}\n\nconst lShape2BlockPositions = currentBlock => {\n  const { direction, position } = currentBlock\n  switch (direction) {\n    case BLOCK_DIRECTION.N:\n      return [\n        [position[0] + 1, position[1]],\n        [position[0], position[1]],\n        [position[0], position[1] + 1],\n        [position[0], position[1] + 2],\n      ]\n    case BLOCK_DIRECTION.E:\n      return [\n        [position[0], position[1] + 1],\n        [position[0], position[1]],\n        [position[0] - 1, position[1]],\n        [position[0] - 2, position[1]],\n      ]\n    case BLOCK_DIRECTION.S:\n      return [\n        [position[0] -  1, position[1]],\n        [position[0], position[1]],\n        [position[0], position[1] - 1],\n        [position[0], position[1] - 2],\n      ]\n    case BLOCK_DIRECTION.W:\n      return [\n        [position[0], position[1] - 1],\n        [position[0], position[1]],\n        [position[0] + 1, position[1]],\n        [position[0] + 2, position[1]],\n      ]\n  }\n}\n\n\nconst tShapeBlockPositions = currentBlock => {\n  const { direction, position } = currentBlock\n  switch (direction) {\n    case BLOCK_DIRECTION.N:\n      return [\n        [position[0] - 1, position[1]],\n        [position[0], position[1]],\n        [position[0] + 1, position[1]],\n        [position[0], position[1] + 1],\n      ]\n    case BLOCK_DIRECTION.E:\n      return [\n        [position[0], position[1] - 1],\n        [position[0], position[1]],\n        [position[0], position[1] + 1],\n        [position[0] - 1, position[1]],\n      ]\n    case BLOCK_DIRECTION.S:\n      return [\n        [position[0] -  1, position[1]],\n        [position[0], position[1]],\n        [position[0] + 1, position[1]],\n        [position[0], position[1] - 1],\n      ]\n    case BLOCK_DIRECTION.W:\n      return [\n        [position[0], position[1] - 1],\n        [position[0], position[1]],\n        [position[0], position[1] + 1],\n        [position[0] + 1, position[1]],\n      ]\n  }\n}\n\nexport const computeBlockPosition = currentBlock => {\n  const { type } = currentBlock\n  switch (type) {\n    case BLOCK_TYPE.LONG:\n      return longBlockPositions(currentBlock)\n    case BLOCK_TYPE.SQUARE:\n      return squareBlockPositions(currentBlock)\n    case BLOCK_TYPE.LSHAPE_1:\n      return lShape1BlockPositions(currentBlock)\n    case BLOCK_TYPE.LSHAPE_2:\n      return lShape2BlockPositions(currentBlock)\n    case BLOCK_TYPE.TSHAPE:\n      return tShapeBlockPositions(currentBlock)\n    default:\n      return [] // nothing\n  }\n}\n\nexport const validateBoard = (board, block) => {\n  const positions = computeBlockPosition(block)\n\n  // 1. out of bound\n  const isOutOfBound = R.compose(\n    R.lt(0),\n    R.length,\n    R.filter(pos => pos[0] < 0 || pos[0] >= GRID_WIDTH || pos[1] >= GRID_HEIGHT)\n  )(positions)\n\n  if (isOutOfBound) {\n    return false\n  }\n\n  // 2. collide existing\n  const isCollided = R.compose(\n    R.lt(0),\n    R.length,\n    R.filter(pos => {\n      return pos[1] >= 0 && board[pos[1]][pos[0]] == SOLID_BLOCK\n    })\n  )(positions)\n\n  return !isCollided\n}\n\nexport const taintBoardPositionAsSolid = (board, block) => {\n  const positions = computeBlockPosition(block)\n\n  const isOutOfBound = R.compose(\n    R.lt(0),\n    R.length,\n    R.filter(pos => pos[0] < 0 || pos[0] >= GRID_WIDTH || pos[1] >= GRID_HEIGHT || pos[1] < 0)\n  )(positions)\n\n  return {\n    newBoard: R.addIndex(R.map)((row, rowIndex) => {\n      return R.addIndex(R.map)((cell, cellIndex) => {\n        return R.includes([cellIndex, rowIndex])(positions) ? SOLID_BLOCK : cell\n      })(row)\n    })(board),\n    anyUnpaintPart: isOutOfBound,\n  }\n}\n\nexport const clearCompletedBoardLines = (board) => {\n  const pointReceived = R.compose(\n    R.length,\n    R.filter(row => R.all(R.equals(SOLID_BLOCK))(row))\n  )(board)\n\n  if (pointReceived === 0) {\n    return {\n      newBoard: board,\n      pointReceived\n    }\n  }\n  const newBoard = R.compose(\n    R.concat(R.times(() => Array(GRID_WIDTH).fill(EMPTY_BLOCK), pointReceived)),\n    R.tap(x => console.log(x)),\n    R.reject(row => R.all(R.equals(SOLID_BLOCK))(row))\n  )(board)\n  console.log(newBoard)\n  return {\n    newBoard,\n    pointReceived\n  }\n}\n","// redux-ducks design\n// include actions, reducers\nimport { GRID_WIDTH, GRID_HEIGHT } from '../../constants/game'\nimport { EMPTY_BLOCK, DROPPING_BLOCK, BLOCK_TYPE, BLOCK_DIRECTION } from '../../constants/block'\nimport * as R from 'ramda'\nimport { createSelector } from 'reselect'\n\nimport { computeBlockPosition, validateBoard, taintBoardPositionAsSolid, clearCompletedBoardLines } from '../../utils/block'\n// game board state will store inside redux\n\nconst SCOPE = 'TERTIS'\n\n// actions\nconst ADVANCED_BOARD = `${SCOPE}/ADVANCED_BOARD`\nconst MOVE_BLOCK_LEFT = `${SCOPE}/MOVE_BLOCK_LEFT`\nconst MOVE_BLOCK_RIGHT = `${SCOPE}/MOVE_BLOCK_RIGHT`\nconst ROTATE_BLOCK = `${SCOPE}/ROTATE_BLOCK`\nconst MOVE_BLOCK_DOWN = `${SCOPE}.MOVE_BLOCK_DOWN`\n\nexport const advanceBoard = () => ({\n  type: ADVANCED_BOARD\n})\n\nexport const moveBlockLeft = () => ({\n  type: MOVE_BLOCK_LEFT\n})\n\nexport const moveBlockRight = () => ({\n  type: MOVE_BLOCK_RIGHT\n})\n\nexport const rotateBlock = () => ({\n  type: ROTATE_BLOCK\n})\n\nexport const moveBlockDown = () => ({\n  type: MOVE_BLOCK_DOWN\n})\n\n// initial state\n\nconst generateEmptyBoard = (width, height) => {\n  return R.map(() => Array(width).fill(EMPTY_BLOCK))(Array(height))\n}\n\nconst defaultBlockComposition = {\n  direction: BLOCK_DIRECTION.N,\n}\n\nconst generateNewBlockType = () => {\n  const blockTypeKeys = R.keys(BLOCK_TYPE)\n  const key = Math.floor(Math.random() * blockTypeKeys.length)\n  return BLOCK_TYPE[blockTypeKeys[key]]\n}\n\nconst generateNewBlock = () => {\n  const type = generateNewBlockType()\n  let position\n  switch (type) {\n    case BLOCK_TYPE.LONG:\n    case BLOCK_TYPE.LSHAPE_1:\n    case BLOCK_TYPE.LSHAPE_2:\n      position = [GRID_WIDTH/2, -3]\n      break\n    case BLOCK_TYPE.SQUARE:\n    case BLOCK_TYPE.TSHAPE:\n      position = [GRID_WIDTH/2, -2]\n      break\n    default:\n      position = [GRID_WIDTH/2, 0]\n  }\n  return {\n    type,\n    position,\n    ...defaultBlockComposition\n  }\n}\n\nconst initialState = {\n  board: generateEmptyBoard(GRID_WIDTH, GRID_HEIGHT),\n  currentDroppingBlock: generateNewBlock(),\n  isPlaying: true,\n  gamePoint: 0,\n}\n\n// reducer\n\nconst advancedBoardReducer = (state, action) => {\n  // find the dropping block and make sure it can dropped (i.e. y index++)\n  const { isPlaying } = state\n  if (!isPlaying) {\n    console.log('not playing')\n    return state\n  }\n  const currentPosition = state.currentDroppingBlock.position\n  const newPosition = [\n    currentPosition[0],\n    currentPosition[1] + 1\n  ]\n  const updatedBlock = {\n    ...state.currentDroppingBlock,\n    position: newPosition\n  }\n  // validate the new position\n  const isValidated = validateBoard(state.board, updatedBlock)\n  // if failed, generate a new block\n  if (!isValidated) {\n    const newBlock = generateNewBlock()\n    // is any block part hanging outside?\n    const { newBoard: tempBoard, anyUnpaintPart } = taintBoardPositionAsSolid(state.board, state.currentDroppingBlock)\n    if (anyUnpaintPart) {\n      // gameover!\n      console.log('game over')\n      return {\n        ...state,\n        board: tempBoard,\n        isPlaying: false,\n        currentDroppingBlock: newBlock\n      }\n    }\n    const { newBoard, pointReceived } = clearCompletedBoardLines(tempBoard)\n    return {\n      ...state,\n      board: newBoard,\n      currentDroppingBlock: newBlock,\n      gamePoint: state.gamePoint + pointReceived,\n    }\n  }\n  return {\n    ...state,\n    currentDroppingBlock: updatedBlock\n  }\n}\n\nconst moveBlockRedcuer = (state, action) => {\n  const currentPosition = state.currentDroppingBlock.position\n  const newPosition = [\n    action.type === MOVE_BLOCK_LEFT ? currentPosition[0] - 1 : currentPosition[0] + 1,\n    currentPosition[1]\n  ]\n  const updatedBlock = {\n    ...state.currentDroppingBlock,\n    position: newPosition\n  }\n  // validate the new position\n  const isValidated = validateBoard(state.board, updatedBlock)\n  if (isValidated) {\n    return {\n      ...state,\n      currentDroppingBlock: updatedBlock\n    }\n  } else {\n    return state\n  }\n}\n\nconst rotateBlockReducer = (state, action) => {\n  const currentDirection = state.currentDroppingBlock.direction\n  let nextDirection\n  switch (currentDirection) {\n    case BLOCK_DIRECTION.N:\n      nextDirection = BLOCK_DIRECTION.E\n      break\n    case BLOCK_DIRECTION.E:\n      nextDirection = BLOCK_DIRECTION.S\n      break\n    case BLOCK_DIRECTION.S:\n      nextDirection = BLOCK_DIRECTION.W\n      break\n    case BLOCK_DIRECTION.W:\n    default:\n      nextDirection = BLOCK_DIRECTION.N\n      break\n  }\n  const updatedBlock = {\n    ...state.currentDroppingBlock,\n    direction: nextDirection\n  }\n  // validate the new position\n  const isValidated = validateBoard(state.board, updatedBlock)\n  if (isValidated) {\n    return {\n      ...state,\n      currentDroppingBlock: updatedBlock\n    }\n  } else {\n    return state\n  }\n}\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ADVANCED_BOARD:\n    case MOVE_BLOCK_DOWN:\n      return advancedBoardReducer(state, action)\n      break\n    case MOVE_BLOCK_LEFT:\n    case MOVE_BLOCK_RIGHT:\n      return moveBlockRedcuer(state, action)\n      break\n    case ROTATE_BLOCK:\n      return rotateBlockReducer(state, action)\n      break\n    default:\n      return state\n  }\n}\n\n// selectors\nexport const boardSelector = state => state.game.board\nexport const currentBlockSelector = state => state.game.currentDroppingBlock\nexport const isPlayingSelector = state => state.game.isPlaying\nexport const gamePointSelector = state => state.game.gamePoint\n","import { combineReducers } from 'redux'\nimport storeGenerator from './middlewares/store'\nimport gameReducer from './modules/game'\n\nexport default storeGenerator(\n  combineReducers({\n    game: gameReducer\n  })\n)\n","import React from 'react'\nimport * as R from 'ramda'\nimport { EMPTY_BLOCK, SOLID_BLOCK } from '../constants/block'\nimport styled  from 'styled-components/macro'\n\nconst Cell = styled.div`\n  border: 1px solid #333;\n  width: 5vh;\n  height: 5vh;\n  ${props => props.type == SOLID_BLOCK && `\n    background-color: blue;\n  `}\n  ${props => props.isDropping && `\n    background-color: green;\n  `}\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 100%;\n`\n\n\nconst Row = (props) => {\n  const { rowState, blockXPositions } = props\n  // based on the type and position\n  return (\n    <Container>\n      {\n        R.addIndex(R.map)((cellState, index) => <Cell key={index} type={cellState} isDropping={R.includes(index, blockXPositions)} />)(rowState)\n      }\n    </Container>\n  )\n}\n\nexport default Row\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as R from 'ramda'\nimport { boardSelector, currentBlockSelector } from '../redux/modules/game'\n\nimport styled from 'styled-components/macro'\nimport Row from '../components/row'\nimport { computeBlockPosition } from '../utils/block'\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nclass Board extends React.PureComponent {\n\n  render () {\n    const { board, currentBlock } = this.props\n    // draw the grid depending on the board state\n    // compute all need to tint position\n    const positions = computeBlockPosition(currentBlock)\n    return (<Grid>\n      {\n        R.addIndex(R.map)((rowState, index) => {\n          const computedXPositions = R.compose(\n            R.map(pos => pos[0]),\n            R.filter(pos => pos[1] == index),\n          )(positions)\n          return (<Row rowState={rowState} key={index} blockXPositions={computedXPositions} />)\n        })(board)\n      }\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = R.applySpec({\n  board: boardSelector,\n  currentBlock: currentBlockSelector,\n})\n\nexport default connect(\n  mapStateToProps\n)(Board)\n","import React from 'react'\nimport { DEFAULT_GRAVITY } from '../constants/game'\nimport { connect } from 'react-redux'\nimport * as R from 'ramda'\n\nimport { isPlayingSelector, advanceBoard, moveBlockLeft, moveBlockRight, rotateBlock, moveBlockDown } from '../redux/modules/game'\n\nclass Handler extends React.PureComponent {\n\n  onKeydown = (event) => {\n    const { isPlaying, moveBlockLeft, moveBlockRight, rotateBlock, moveBlockDown } = this.props\n    if (!isPlaying) {\n      return\n    }\n    switch (event.keyCode) {\n      case 37: // left\n        moveBlockLeft()\n        break\n      case 38: // up\n        rotateBlock()\n        break\n      case 39: // right\n        moveBlockRight()\n        break\n      case 40: // down\n        moveBlockDown()\n        break\n    }\n  }\n\n  componentDidMount () {\n    setTimeout(this.update, 1000/DEFAULT_GRAVITY)\n    document.addEventListener('keydown', this.onKeydown, false)\n  }\n\n  componentWillUnmount () {\n    document.removeListener('keydown', this.onKeydown, false)\n  }\n\n  update = () => {\n    const { advanceBoard, isPlaying } = this.props\n    if (!isPlaying) {\n      return\n    }\n    advanceBoard()\n    setTimeout(this.update, 1000/DEFAULT_GRAVITY)\n  }\n\n  render () {\n    return null\n  }\n}\n\nconst mapStateToProps = R.applySpec({\n  isPlaying: isPlayingSelector\n})\n\nconst mapDispatchToProps = {\n  advanceBoard,\n  moveBlockLeft,\n  moveBlockRight,\n  rotateBlock,\n  moveBlockDown\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Handler)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as R from 'ramda'\nimport styled from 'styled-components/macro'\n\nimport { isPlayingSelector, gamePointSelector } from '../redux/modules/game'\n\nconst Container = styled.div`\n  display: flex;\n  width: calc(100% - 16px);\n  flex-direction: row;\n  margin-left: 8px;\n  margin-right: 8px;\n`\n\nconst Controls = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 0 20%;\n  padding: 8px;\n  span {\n    font-size: 12pt;\n  }\n`\n\nconst Header = styled.div`\n  font-size: 24pt;\n  font-weight: 500;\n  flex: 1 0 50%;\n  padding: 8px;\n`\n\nconst Score = styled.div`\n  font-size: 20pt;\n  flex: 1 0 20%;\n  padding: 8px;\n  ${props => props.isOver && `\n    color: #FF9900;\n  `}\n`\n\nconst GameMessage = (props) => {\n  const { score, isPlaying } = props\n  return (\n    <Container>\n      <Controls>\n        <span>{'key up for rotate'}</span>\n        <span>{'key left/right for alignment'}</span>\n        <span>{'key down for accelerate'}</span>\n      </Controls>\n      <Header>{'Tertis Challenge - Build this in 4 hours!'}</Header>\n      {isPlaying && <Score>{`Score: ${score}`}</Score>}\n      {!isPlaying && <Score isOver>{`Gameover! Your score: ${score}`}</Score>}\n    </Container>\n  )\n}\n\nconst mapStateToProps = R.applySpec({\n  isPlaying: isPlayingSelector,\n  score: gamePointSelector,\n})\n\nexport default connect(\n  mapStateToProps,\n)(GameMessage)\n","import React from 'react';\nimport Board from './containers/board'\nimport Handler from './containers/gameHandler'\nimport GameMessage from './containers/gameMessage'\n\nimport logo from './logo.svg';\nimport './App.css';\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <GameMessage />\n      <Handler />\n      <Board />\n      <span>Created by <a href='https://benchanhp.me'>@hkbenchan</a></span>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux'\nimport store from './redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}